//import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTargetWithTests

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.31'
}

group = 'de.apothecarius'
version = '1.0'

repositories {
    mavenCentral()
}

kotlin {
    targets {
        jvm()

        configure([jvm])  {
            withJava()
            jvmJar {
                //hack to have kotlin libs like "kotlin.jvm.internal.Intrinsics" in the jar, without which
                //java cannot use a kotlin jar.
                from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
            }
        }
    }
    jvm {
        compilations.all {
            kotlinOptions.jvmTarget = '1.8'
        }
        testRuns["test"].executionTask.configure {
            useJUnit()
        }
    }
    js(LEGACY) {
        browser {
            testTask {
                useKarma {
                    useChromeHeadless()
                    webpackConfig.cssSupport.enabled = true
                }
            }
        }
    }
/*    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    KotlinNativeTargetWithTests nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")
*/
    
    sourceSets {
        commonMain {

        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {

        }
        jvmTest {
            dependencies {
                implementation kotlin('test-junit')
            }
        }
        jsMain {

        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        /*nativeMain {

        }
        nativeTest {

        }*/
    }
}
